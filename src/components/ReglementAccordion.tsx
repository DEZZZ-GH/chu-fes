"use client";

import React, { useState } from "react";

const reglementData = [
  {
    title: "Payant",
    content: [
      "Si vous n'avez pas de couverture mÃ©dicale, vous Ãªtes \"Payant\". Pour rÃ©gler les frais de l'examen, prÃ©sentez-vous Ã  la rÃ©gie du service qui vous a dÃ©livrÃ© le RDV avec :",
      "- Une piÃ¨ce d'identitÃ© (CNI, Passeport)",
      "- Le bon d'examen de votre mÃ©decin traitant (cachetÃ©, signÃ© et une copie)",
      "- L'imprimÃ© du RDV (et une copie)"
    ]
  },
  {
    title: "CNOPS",
    content: [
      "ModalitÃ©s de Paiement et Remboursement",
      "\nPour un paiement Ã  100% avec remboursement CNOPS :",
      "- Le bon d'examen de votre mÃ©decin traitant (cachetÃ©, signÃ© et une copie)",
      "- L'imprimÃ© du RDV (et une copie)",
      "- Une feuille de soins (Ã  remplir par le caissier Ã  la rÃ©gie)",
      "",
      "Pour un paiement Ã  20% avec prise en charge CNOPS (80%) :",
      "- Le bon d'examen de votre mÃ©decin traitant (cachetÃ©, signÃ© et une copie)",
      "- L'imprimÃ© du RDV (et une copie)",
      "- Deux copies de votre carte de mutuelle",
      "- Deux copies de la piÃ¨ce d'identitÃ© (CNI, Passeport) de l'adhÃ©rent",
      "- Deux copies de la piÃ¨ce d'identitÃ© (CNI, Passeport) du bÃ©nÃ©ficiaire",
      "- La feuille de soins cachetÃ©e et signÃ©e par votre mÃ©decin traitant"
    ]
  },
  {
    title: "Mutuelle des Forces ArmÃ©es Royales",
    content: [
      "ModalitÃ©s de Paiement et Prise en Charge",
      "\nPaiement intÃ©gral et remboursement mutuelle :",
      "- Le bon d'examen de votre mÃ©decin (cachetÃ©, signÃ© et sa copie)",
      "- L'imprimÃ© de RDV (et sa copie)",
      "- Une feuille de soins (Ã  remplir par le caissier)",
      "",
      "Prise en charge par la Mutuelle des FAR :",
      "- Obtenez le bon de demande d'examen (cachetÃ© et signÃ© par votre mÃ©decin)",
      "- Faites remplir la feuille de soins mÃ©dicaux et le formulaire de Prise En Charge (PEC) par votre mÃ©decin",
      "- Soumettez le formulaire PEC + sa copie au responsable du BAF pour cachet",
      "- Allez au service des accords de prise en charge pour dÃ©terminer le pourcentage Ã  votre charge",
      "",
      "Le jour de l'examen, prÃ©sentez Ã  la rÃ©gie :",
      "- L'imprimÃ© du RDV (et sa copie)",
      "- Deux copies de la carte de mutuelle",
      "- Deux copies de la piÃ¨ce d'identitÃ© (CNI, Passeport) de l'adhÃ©rent",
      "- Deux copies de la piÃ¨ce d'identitÃ© (CNI, Passeport) du bÃ©nÃ©ficiaire",
      "- La feuille de soins remplie, cachetÃ©e et signÃ©e par le mÃ©decin (et sa copie)",
      "- Le formulaire de PEC signÃ©, cachetÃ©, indiquant le pourcentage de prise en charge (original + copie)"
    ]
  },
  {
    title: "CNSS et Assurances",
    content: [
      "Vous avez seulement la possibilitÃ© de payer les frais de votre examen Ã  100% et vous faire rembourser auprÃ¨s de votre mutuelle. PiÃ¨ces Ã  fournir :",
      "- Le bon dâ€™examen Ã©tabli par votre mÃ©decin traitant cachetÃ© et signÃ©, ou la prescription de lâ€™examen sur la feuille de soin",
      "- Une copie dudit bon ou de la feuille portant la prescription",
      "- Lâ€™imprimÃ© du RDV + une copie"
    ]
  },
  {
    title: "RAMED",
    content: [
      "Pour bÃ©nÃ©ficier dâ€™une prise en charge de 100% des frais de votre examen vous devez fournir les piÃ¨ces suivantes :",
      "- Copie de la Carte Nationale dâ€™IdentitÃ©",
      "- Copie de la carte RAMED valide",
      "- Copie de la fiche de rÃ©fÃ©rence signÃ©e et cachetÃ©e par le mÃ©decin rÃ©fÃ©rant",
      "- Bon dâ€™examen Ã©tabli par le mÃ©decin traitant cachetÃ© et signÃ©"
    ]
  }
];

const AccordionItem = ({ title, content, isOpen, onClick }: any) => (
  <div className="border-l-4 border-blue-500 bg-white rounded-xl shadow-sm mb-4 overflow-hidden transition-all duration-300">
    <button
      className="w-full flex justify-between items-center px-4 py-3 font-semibold text-left text-blue-800 hover:bg-blue-50"
      onClick={onClick}
    >
      {title}
      <span className="text-xl">{isOpen ? "âˆ’" : "+"}</span>
    </button>
    {isOpen && (
      <div className="bg-blue-50 px-6 py-4 text-gray-800 text-sm leading-relaxed">
        <ul className="list-none list-inside space-y-1">
          {content
  .filter((line: string) => line.trim() !== "") // ðŸ§¹ skip empty lines
  .map((line: string, i: number) => (
    <li key={i}>{line}</li>
))}

        </ul>
      </div>
    )}
  </div>
);

const ReglementAccordion: React.FC = () => {
  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  const toggleIndex = (index: number) => {
    setActiveIndex(activeIndex === index ? null : index);
  };

  return (
    <section className="py-16 px-4 bg-gradient-to-b from-blue-50 to-white">
      <div className="max-w-3xl mx-auto">
        <h2 className="text-2xl md:text-3xl font-bold text-center text-blue-900 mb-10 border-b border-blue-300 inline-block pb-2">
          RÃˆGLEMENT
        </h2>
        {reglementData.map((item, index) => (
          <AccordionItem
            key={index}
            title={item.title}
            content={item.content}
            isOpen={activeIndex === index}
            onClick={() => toggleIndex(index)}
          />
        ))}
      </div>
    </section>
  );
};

export default ReglementAccordion;
